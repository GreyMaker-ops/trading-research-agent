"""SQLAlchemy models for TimescaleDB."""

from uuid import uuid4

from sqlalchemy import Boolean, Column, DateTime, Float, String, Text
from sqlalchemy.orm import declarative_base

Base = declarative_base()


class Candle(Base):
    """One-minute market data candle."""
    __tablename__ = "candles"
    ts = Column(DateTime, primary_key=True)
    pair = Column(String, primary_key=True)
    open = Column(Float)
    high = Column(Float)
    low = Column(Float)
    close = Column(Float)
    volume = Column(Float)


class Indicator(Base):
    """Computed technical indicators for a candle."""
    __tablename__ = "indicators"
    ts = Column(DateTime, primary_key=True)
    pair = Column(String, primary_key=True)
    ema_fast = Column(Float)
    ema_slow = Column(Float)
    rsi14 = Column(Float)
    bb_width = Column(Float)
    tweet_z = Column(Float)
    news_polarity = Column(Float)


class Signal(Base):
    """Trading signal generated by the LLM."""

    __tablename__ = "signals"

    id = Column(String, primary_key=True, default=lambda: str(uuid4()))
    ts = Column(DateTime)
    pair = Column(String)
    direction = Column(String)
    rationale = Column(Text)
    confidence = Column(Float)
    hit = Column(Boolean, nullable=True)
    resolved_at = Column(DateTime, nullable=True)
